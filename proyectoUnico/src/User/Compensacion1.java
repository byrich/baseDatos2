/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User;

import Controlador.Compensacion_sql;
import Entidad.Lote_Cheque;
import UI.Principal_ui;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class Compensacion1 extends javax.swing.JPanel {

    /**
     * Creates new form Compensacion1
     */
            public Principal_ui papa;
    Compensacion_sql api;
    int miNumeroBanco = 8;
    public Compensacion1() {
        initComponents();
    }
    public void cargarApi(Compensacion_sql papa){
        this.api = papa;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        jButton1.setText("Compensar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        List operaciones = new ArrayList<>();
        Float monto_total = Float.parseFloat("0.0");
        int cantidad_cheques = 0;
        int bancoViene =0;
        int id_lote = 0;
        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION)
        {
            File myFile = chooser.getSelectedFile();
            String ruta = myFile.getName();
            String importantes= ruta.replace(".txt", "");
            String[] datos = (importantes).split("_");
            monto_total = Float.parseFloat(datos[0]);
            cantidad_cheques = Integer.parseInt(datos[1]);
            bancoViene = Integer.parseInt(datos[2]);
            id_lote = Integer.parseInt(datos[3]);
            BufferedReader br; 
            try {
                br = new BufferedReader(new FileReader(myFile));
                String st; 
                int contador =0;
                while ((st = br.readLine()) != null){
                    if(contador!=0){
                        String[]  arreglo1 = st.split(Pattern.quote("|"));
                        String referencia = arreglo1[1];
                        int cuenta = Integer.parseInt(arreglo1[2]);
                        int no_cheque = Integer.parseInt(arreglo1[3]);
                        float monto = Float.parseFloat(arreglo1[4]);
                        Lote_Cheque p = new Lote_Cheque(bancoViene,referencia,cuenta,no_cheque,monto, id_lote);
                        operaciones.add(p);
                    }
                    contador++;
                }
                System.out.println(operaciones.size());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Compensacion1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Compensacion1.class.getName()).log(Level.SEVERE, null, ex);
            }      
        }
        
        
        if(operaciones.size()!=0){
            for(int i=0; i <operaciones.size(); i++){
                System.out.println(((Lote_Cheque)operaciones.get(i)).compensar(i,this.api));
            }
        }
        float MontoBD = this.api.getMonto(bancoViene, id_lote);
        int cantidadCheques = this.api.getCantidad(bancoViene, id_lote);
        if(MontoBD != monto_total && cantidadCheques != cantidad_cheques){
            JOptionPane.showMessageDialog(null, "No se puede realizar la compensaciÃ³n");

        }else{
            JOptionPane.showMessageDialog(null, "Realizar Compensacion, Cuadre exitoso");
            //sedf
            System.out.println("Lote: " +id_lote+" banco: "+bancoViene);
            int respuesta = this.api.grabarTransacciones(id_lote, bancoViene); 
            System.out.println("respuesta: "+respuesta);
            ArrayList<Lote_Cheque> cheques = this.api.getChequesLote(bancoViene, id_lote);
            PrintWriter writer;
            try {
                writer = new PrintWriter(monto_total+"_"+cantidad_cheques+"_"+this.miNumeroBanco+"_"+id_lote+".txt", "UTF-8");
                writer.println("BANCO|REFERENCIA|CUENTA|NO_CHEQUE|MONTO|RESULTADO");
                for(int i=0; i <cheques.size();i++){
                    String resultado = cheques.get(i).estado.equalsIgnoreCase("Cobrado")?"Ok":"Error";
                    writer.println(bancoViene+"|"+cheques.get(i).referencia+"|"+cheques.get(i).cuenta+"|"+cheques.get(i).cuenta+"|"+cheques.get(i).no_cheque+"|"+cheques.get(i).monto+"|"+resultado);
                }
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Compensacion1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Compensacion1.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
