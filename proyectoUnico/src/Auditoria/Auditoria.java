package Auditoria;

import Controlador.conexion;
import java.sql.ResultSet;

/**
 *
 * @author marilu
 */
public class Auditoria extends javax.swing.JPanel {

    conexion db;
    /**
     * Creates new form Auditoria
     */
    public Auditoria() {
        initComponents();
        
        db = conexion.getInstance();
        //se consultan los datos
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel) this.jTable1.getModel();
        ResultSet rs = db.getTransaccion();
        try {
            int operacion = 0;
            String tipoOperacion = "";
            java.sql.Date fecha = null;
            float saldoInicial, monto, saldoFinal;
            String usuario, razonRechazo;
            int noAutorizacion, noRechazo, cuenta, doc;
            while (rs.next()) {
                operacion = rs.getInt("transaccion");
                tipoOperacion = rs.getString("tipo");
                fecha = rs.getDate("fecha");
                saldoInicial = rs.getFloat("saldo_inicial");
                monto = rs.getFloat("valor");
                saldoFinal = rs.getFloat("saldo_final");
                usuario = rs.getString("usuario");
                noAutorizacion = rs.getInt("autorizacion");
                noRechazo = rs.getInt("no_rechazo");
                razonRechazo = rs.getString("razon_rechazo");
                cuenta = rs.getInt("cuenta");
                doc = rs.getInt("doc");

                model.addRow(new Object[]{
                    operacion, tipoOperacion, fecha,
                    saldoInicial, monto, saldoFinal,
                    usuario, noAutorizacion, noRechazo,
                    razonRechazo, cuenta, doc
                });
            }
        }
        catch(Exception e) {
            System.out.println("No se pudieron leer algunas filas");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "operacion", "tipoOperacion", "fechaHora", "clase", "saldoInicial", "Monto", "saldoFinal", "usuario", "terminal", "noAutorizacion", "noRechazo", "razonRechazo", "cuenta", "doc"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
